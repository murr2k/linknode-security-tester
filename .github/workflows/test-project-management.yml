name: Test Project Management

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/core/project_*.py'
      - 'src/core/report_generator.py'
      - 'src/cli/*_commands.py'
      - 'tests/**'
      - 'requirements.txt'
      - '.github/workflows/test-project-management.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
    
    - name: Run unit tests
      run: |
        python -m pytest tests/unit -v --tb=short
    
    - name: Run integration tests
      run: |
        python -m pytest tests/integration -v --tb=short
    
    - name: Generate coverage report
      run: |
        python -m pytest tests/ \
          --cov=src.core.project_manager \
          --cov=src.core.project_scanner \
          --cov=src.core.report_generator \
          --cov=src.cli.project_commands \
          --cov=src.cli.client_commands \
          --cov-report=xml \
          --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: project-management
        name: codecov-umbrella
        fail_ci_if_error: false