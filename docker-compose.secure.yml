version: '3.8'

# Secure Docker Compose configuration
# Uses security best practices and isolation

services:
  # ZAP Proxy with security hardening
  zap:
    image: ghcr.io/zaproxy/zaproxy:stable
    container_name: linknode-zap-secure
    hostname: zap
    
    # Security: Run as non-root user (zap user is built into image)
    user: zap
    
    # Security: Read-only root filesystem
    read_only: true
    
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Security: Drop all capabilities except needed ones
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - NET_RAW
    
    # Security: Additional security options
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined  # Required for ZAP spider
    
    # Required writable directories
    tmpfs:
      - /tmp:size=500M
      - /home/zap/.ZAP:size=1G
    
    volumes:
      # Persist session data
      - type: volume
        source: zap_data
        target: /home/zap/.ZAP_D
        read_only: false
      
      # Mount scripts as read-only
      - type: bind
        source: ./zap-scripts
        target: /zap/scripts
        read_only: true
    
    networks:
      - scanner_net
    
    ports:
      - "127.0.0.1:8080:8080"  # Only bind to localhost
    
    environment:
      - ZAP_PORT=8080
      - ZAP_WEBSWING=false  # Disable UI for security
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/JSON/core/view/version/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    
    command: >
      zap.sh
      -daemon
      -host 0.0.0.0
      -port 8080
      -config api.addrs.addr.name=.*
      -config api.addrs.addr.regex=true
      -config api.key=${ZAP_API_KEY:-changeMe123!}
      -config api.disablekey=false
      -config connection.timeoutInSecs=60
    
    restart: unless-stopped
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Security Scanner Application
  scanner:
    build:
      context: .
      dockerfile: Dockerfile.secure
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse HEAD)}
    
    image: ${REGISTRY_PREFIX:-ghcr.io/murr2k}/linknode-security-tester:${VERSION:-latest}
    container_name: linknode-scanner-secure
    hostname: scanner
    
    # Security: Run as non-root user
    user: scanner
    
    # Security: Read-only root filesystem
    read_only: true
    
    # Security: Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    
    # Security: Drop all capabilities
    cap_drop:
      - ALL
    
    # Security: Security options
    security_opt:
      - no-new-privileges:true
    
    # Required writable directories
    tmpfs:
      - /tmp/scanner:size=100M
    
    volumes:
      # Results directory (writable)
      - type: bind
        source: ./results
        target: /results
        read_only: false
      
      # Config files (read-only)
      - type: bind
        source: ./config.yaml
        target: /app/config.yaml
        read_only: true
    
    networks:
      - scanner_net
      - external_net  # Only scanner can reach internet
    
    environment:
      - ZAP_HOST=zap
      - ZAP_PORT=8080
      - ZAP_API_KEY=${ZAP_API_KEY:-changeMe123!}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
    
    depends_on:
      zap:
        condition: service_healthy
    
    restart: unless-stopped
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Security monitoring
  security-monitor:
    image: aquasec/trivy:latest
    container_name: linknode-security-monitor
    
    # Security settings
    user: "65534:65534"  # nobody user
    read_only: true
    
    cap_drop:
      - ALL
    
    security_opt:
      - no-new-privileges:true
    
    networks:
      - scanner_net
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - trivy-cache:/root/.cache/trivy
    
    command: >
      image
      --severity HIGH,CRITICAL
      --no-progress
      --format json
      ${REGISTRY_PREFIX:-ghcr.io/murr2k}/linknode-security-tester:${VERSION:-latest}
    
    profiles:
      - security

networks:
  # Internal network for service communication
  scanner_net:
    driver: bridge
    internal: true  # No external access
    ipam:
      config:
        - subnet: 172.28.0.0/24
  
  # External network for scanner only
  external_net:
    driver: bridge

volumes:
  zap_data:
    driver: local
  trivy-cache:
    driver: local

# Secrets configuration (for future use)
secrets:
  zap_api_key:
    file: ./secrets/zap_api_key.txt
  scanner_config:
    file: ./secrets/scanner_config.json